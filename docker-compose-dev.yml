version: '3.2'

services:

#  zookeeper:
#    container_name: zookeeper
#    image: wurstmeister/zookeeper:latest
#    restart: always
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#    ports:
#      - "2181:2181"
#
#  kafka:
#    image: wurstmeister/kafka:2.12-2.2.1
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: >-
#        LISTENER_DOCKER_INTERNAL://kafka:19092,
#        LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-kafka}:9092
#
#      KAFKA_LISTENERS: >-
#        LISTENER_DOCKER_INTERNAL://:19092,
#        LISTENER_DOCKER_EXTERNAL://:9092
#
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: >-
#        LISTENER_DOCKER_INTERNAL:PLAINTEXT,
#        LISTENER_DOCKER_EXTERNAL:PLAINTEXT
#
#      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_MESSAGE_MAX_BYTES: 2000000
#      KAFKA_CREATE_TOPICS: "messages:1:1"
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    depends_on:
#      - zookeeper
#
#  kafdrop:
#    image: obsidiandynamics/kafdrop
#    restart: "no"
#    ports:
#      - "9001:9000"
#    environment:
#      KAFKA_BROKERCONNECT: "kafka:9092"
#      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
#    depends_on:
#      - kafka
#
#  configserver:
#    image: hyness/spring-cloud-config-server
#    ports:
#      - "8888:8888"
#    environment:
#      - SPRING_PROFILES_ACTIVE=native
#    volumes:
#      - ./config:/config
#
#  kafka-ui:
#    image: sheepkiller/kafka-manager
#    ports:
#      - "9002:9000"
#    environment:
#      - "ZK_HOSTS=zookeeper:2181"
#      - "APPLICATION_SECRET=pass"
#    depends_on:
#      - kafka
#
#  postgres:
#    image: postgres
#    environment:
#      POSTGRES_USER: ${POSTGRES_USER:-username}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
#      PGDATA: /data/postgres
#      POSTGRES_DB: messages
#    #    volumes:
##      - postgres:/data/postgres
#    ports:
#      - "5432:5432"
#    restart: unless-stopped

  message-sender:
    build:
      dockerfile: Dockerfile
      context: ./docker/message-sender
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
    volumes:
      - ./message-sender/:/app
    ports:
      - 8080:8080
#    depends_on:
#      - kafka
#      - configserver

#  message-persistence:
#    build:
#      dockerfile: Dockerfile
#      context: ./docker/message-persistence
#    volumes:
#      - ./message-persistence/:/app
#    depends_on:
#      - kafka
#      - postgres
#      - configserver
#
#  message-query:
#    build:
#      dockerfile: Dockerfile
#      context: ./docker/message-query
#    volumes:
#      - ./message-query/:/app
#    ports:
#      - 8082:8082
#    depends_on:
#      - postgres
#      - configserver
#
#  message-socket:
#    build:
#      dockerfile: Dockerfile
#      context: ./docker/message-socket
#    volumes:
#      - ./message-socket/:/app
#    ports:
#      - 8083:8083
#    depends_on:
#      - kafka
#      - configserver